// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pokedex.Api.Data;

#nullable disable

namespace Pokedex.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240430195950_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pokedex.Api.Models.Evolucao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Altura")
                        .HasMaxLength(3)
                        .HasColumnType("real")
                        .HasColumnName("Altura_Evolucao");

                    b.Property<bool>("Apanhado")
                        .HasColumnType("bit")
                        .HasColumnName("Apanhado");

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("Codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descricao");

                    b.Property<int>("Elemento")
                        .HasColumnType("int")
                        .HasColumnName("Elemento");

                    b.Property<int>("IdPokemon")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Imagem");

                    b.Property<int>("MaxAtaque")
                        .HasColumnType("int")
                        .HasColumnName("Max_Ataque")
                        .HasComment("Status maximo do ataque");

                    b.Property<int>("MaxDefesa")
                        .HasColumnType("int")
                        .HasColumnName("Max_Defesa")
                        .HasComment("Status maximo da defesa");

                    b.Property<int>("MaxVelocidade")
                        .HasColumnType("int")
                        .HasColumnName("Max_Velocidade")
                        .HasComment("status maximo da velocidade");

                    b.Property<int>("MaxVida")
                        .HasColumnType("int")
                        .HasColumnName("Max_Vida")
                        .HasComment("Status maximo da vida");

                    b.Property<int>("MinAtaque")
                        .HasColumnType("int")
                        .HasColumnName("Min_Ataque")
                        .HasComment("Status base do ataque");

                    b.Property<int>("MinDefesa")
                        .HasColumnType("int")
                        .HasColumnName("Min_Defesa")
                        .HasComment("Status base da defesa");

                    b.Property<int>("MinVelocidade")
                        .HasColumnType("int")
                        .HasColumnName("Min_Velocidade")
                        .HasComment("status base da velocidade");

                    b.Property<int>("MinVida")
                        .HasColumnType("int")
                        .HasColumnName("Min_Vida")
                        .HasComment("Status base da vida");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Nome_Evolcucao");

                    b.Property<float>("Peso")
                        .HasMaxLength(3)
                        .HasColumnType("real")
                        .HasColumnName("Peso_Evolucao");

                    b.Property<int>("SegundoElemento")
                        .HasColumnType("int")
                        .HasColumnName("SegundoElemento");

                    b.HasKey("Id");

                    b.HasIndex("IdPokemon");

                    b.ToTable("Evolucao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Altura = 1f,
                            Apanhado = false,
                            Codigo = 2,
                            Descricao = "Ivysaur's appearance is very similar to that of its pre-evolved form, Bulbasaur. It still retains the turquoise skin and spots, along with its red eyes.",
                            Elemento = 4,
                            IdPokemon = 1,
                            Imagem = "https://www.pokemon.com/static-assets/content-assets/cms2/img/pokedex/full/002.png",
                            MaxAtaque = 245,
                            MaxDefesa = 247,
                            MaxVelocidade = 240,
                            MaxVida = 324,
                            MinAtaque = 62,
                            MinDefesa = 63,
                            MinVelocidade = 60,
                            MinVida = 60,
                            Nome = "Ivysaur",
                            Peso = 13f,
                            SegundoElemento = 7
                        },
                        new
                        {
                            Id = 2,
                            Altura = 2f,
                            Apanhado = false,
                            Codigo = 3,
                            Descricao = "Venusaur is a large, quadrupedal Pokémon with a turquoise body. It has small red eyes and several large ferns on its back and head. The plant bulb that was on the back of its previous evolutions, Bulbasaur and Ivysaur, has now bloomed into a large flower with large pink petals and a yellow center. The female has a seed in the center.",
                            Elemento = 4,
                            IdPokemon = 1,
                            Imagem = "https://www.pokemon.com/static-assets/content-assets/cms2/img/pokedex/full/003.png",
                            MaxAtaque = 289,
                            MaxDefesa = 291,
                            MaxVelocidade = 284,
                            MaxVida = 364,
                            MinAtaque = 82,
                            MinDefesa = 83,
                            MinVelocidade = 80,
                            MinVida = 80,
                            Nome = "Venusaur",
                            Peso = 100f,
                            SegundoElemento = 7
                        },
                        new
                        {
                            Id = 3,
                            Altura = 1.1f,
                            Apanhado = false,
                            Codigo = 5,
                            Descricao = "When it swings its burning tail, the temperature around it rises higher and higher, tormenting its opponents.",
                            Elemento = 2,
                            IdPokemon = 2,
                            Imagem = "https://www.pokemon.com/static-assets/content-assets/cms2/img/pokedex/full/005.png",
                            MaxAtaque = 249,
                            MaxDefesa = 236,
                            MaxVelocidade = 284,
                            MaxVida = 320,
                            MinAtaque = 64,
                            MinDefesa = 58,
                            MinVelocidade = 80,
                            MinVida = 58,
                            Nome = "Charmeleon",
                            Peso = 19f,
                            SegundoElemento = 0
                        },
                        new
                        {
                            Id = 4,
                            Altura = 1.7f,
                            Apanhado = false,
                            Codigo = 6,
                            Descricao = "Charizard is a large dragon-like Pokémon, mainly orange in color. It has two large wings, the underside of which are turquoise. Like Charmander and Charmeleon, it has a flame at the end of its tail.",
                            Elemento = 2,
                            IdPokemon = 2,
                            Imagem = "https://www.pokemon.com/static-assets/content-assets/cms2/img/pokedex/full/006.png",
                            MaxAtaque = 293,
                            MaxDefesa = 280,
                            MaxVelocidade = 328,
                            MaxVida = 360,
                            MinAtaque = 84,
                            MinDefesa = 78,
                            MinVelocidade = 100,
                            MinVida = 78,
                            Nome = "Charizard",
                            Peso = 90.5f,
                            SegundoElemento = 5
                        },
                        new
                        {
                            Id = 5,
                            Altura = 1f,
                            Apanhado = false,
                            Codigo = 8,
                            Descricao = "Wartortle is a small, bipedal, turtle-like Pokémon with a similar appearance to that of its pre-evolved form, Squirtle. Some differences are that Wartortle have developed sharper and larger claws and teeth, and that their tails are larger and fluffier than those of Squirtle's.",
                            Elemento = 3,
                            IdPokemon = 3,
                            Imagem = "https://www.pokemon.com/static-assets/content-assets/cms2/img/pokedex/full/008.png",
                            MaxAtaque = 247,
                            MaxDefesa = 284,
                            MaxVelocidade = 236,
                            MaxVida = 322,
                            MinAtaque = 63,
                            MinDefesa = 80,
                            MinVelocidade = 58,
                            MinVida = 59,
                            Nome = "Wartortle",
                            Peso = 22.5f,
                            SegundoElemento = 0
                        },
                        new
                        {
                            Id = 6,
                            Altura = 1.6f,
                            Apanhado = false,
                            Codigo = 9,
                            Descricao = "Blastoise is a large, bipedal, reptilian Pokémon. It has a blue body with small purple eyes, a light brown belly, and a stubby tail. It has a large brown shell with two powerful water cannons on either side, which can be withdrawn.",
                            Elemento = 3,
                            IdPokemon = 3,
                            Imagem = "https://www.pokemon.com/static-assets/content-assets/cms2/img/pokedex/full/009.png",
                            MaxAtaque = 291,
                            MaxDefesa = 328,
                            MaxVelocidade = 280,
                            MaxVida = 362,
                            MinAtaque = 83,
                            MinDefesa = 100,
                            MinVelocidade = 78,
                            MinVida = 79,
                            Nome = "Blastoise",
                            Peso = 85.5f,
                            SegundoElemento = 0
                        });
                });

            modelBuilder.Entity("Pokedex.Api.Models.EvolucaoHabilidade", b =>
                {
                    b.Property<int>("IdHabilidade")
                        .HasColumnType("int");

                    b.Property<int>("IdEvolucao")
                        .HasColumnType("int");

                    b.HasKey("IdHabilidade", "IdEvolucao");

                    b.HasIndex("IdEvolucao");

                    b.ToTable("EvolucaoHabilidade");

                    b.HasData(
                        new
                        {
                            IdHabilidade = 1,
                            IdEvolucao = 1
                        },
                        new
                        {
                            IdHabilidade = 2,
                            IdEvolucao = 1
                        },
                        new
                        {
                            IdHabilidade = 2,
                            IdEvolucao = 2
                        },
                        new
                        {
                            IdHabilidade = 3,
                            IdEvolucao = 2
                        },
                        new
                        {
                            IdHabilidade = 4,
                            IdEvolucao = 3
                        },
                        new
                        {
                            IdHabilidade = 6,
                            IdEvolucao = 3
                        },
                        new
                        {
                            IdHabilidade = 6,
                            IdEvolucao = 4
                        },
                        new
                        {
                            IdHabilidade = 7,
                            IdEvolucao = 4
                        },
                        new
                        {
                            IdHabilidade = 1,
                            IdEvolucao = 5
                        },
                        new
                        {
                            IdHabilidade = 9,
                            IdEvolucao = 5
                        },
                        new
                        {
                            IdHabilidade = 8,
                            IdEvolucao = 6
                        },
                        new
                        {
                            IdHabilidade = 9,
                            IdEvolucao = 6
                        });
                });

            modelBuilder.Entity("Pokedex.Api.Models.Habilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descricao");

                    b.Property<int>("Elemento")
                        .HasColumnType("int")
                        .HasColumnName("Elemento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Nome_Habilidade");

                    b.Property<int>("Power")
                        .HasColumnType("int")
                        .HasColumnName("Power");

                    b.Property<int>("PtPower")
                        .HasColumnType("int")
                        .HasColumnName("Pontos_Power");

                    b.Property<int>("PtPrecisao")
                        .HasColumnType("int")
                        .HasColumnName("Pontos_Precisao");

                    b.HasKey("Id");

                    b.ToTable("Habilidade");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "A physical attack in which the user charges and slams into the foe with its whole body.",
                            Elemento = 1,
                            Nome = "Tackle",
                            Power = 40,
                            PtPower = 35,
                            PtPrecisao = 100
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "The foe is struck with slender, whiplike vines to inflict damage.",
                            Elemento = 4,
                            Nome = "Vine Whip",
                            Power = 45,
                            PtPower = 25,
                            PtPrecisao = 100
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "A sharp-edged leaf is launched to slash at the foe. It has a high critical-hit ratio.",
                            Elemento = 4,
                            Nome = "Razor Leaf",
                            Power = 55,
                            PtPower = 25,
                            PtPrecisao = 95
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Hard, pointed, and sharp claws rake the foe to inflict damage.",
                            Elemento = 1,
                            Nome = "Scratch",
                            Power = 40,
                            PtPower = 35,
                            PtPrecisao = 100
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "The target is attacked with small flames. It may also leave the target with a burn.",
                            Elemento = 2,
                            Nome = "Ember",
                            Power = 40,
                            PtPower = 25,
                            PtPrecisao = 100
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "The user bites with flame-cloaked fangs. This may also make the target flinch or leave it with a burn.",
                            Elemento = 2,
                            Nome = "Fire Fang",
                            Power = 65,
                            PtPower = 15,
                            PtPrecisao = 95
                        },
                        new
                        {
                            Id = 7,
                            Descricao = "Sharp, huge claws hook and slash the foe quickly and with great power.",
                            Elemento = 16,
                            Nome = "Dragon Claw",
                            Power = 80,
                            PtPower = 15,
                            PtPrecisao = 100
                        },
                        new
                        {
                            Id = 8,
                            Descricao = "The foe is struck with a lot of water expelled forcibly from the mouth.",
                            Elemento = 3,
                            Nome = "Water Gun",
                            Power = 40,
                            PtPower = 25,
                            PtPrecisao = 100
                        },
                        new
                        {
                            Id = 9,
                            Descricao = "The user attacks the foe with a pulsing blast of water. It may also confuse the foe.",
                            Elemento = 3,
                            Nome = "Water Pulse",
                            Power = 60,
                            PtPower = 20,
                            PtPrecisao = 100
                        });
                });

            modelBuilder.Entity("Pokedex.Api.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descricao");

                    b.Property<int?>("Elemento")
                        .HasColumnType("int")
                        .HasColumnName("Elemento");

                    b.Property<int>("IdTreinador")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Nome");

                    b.Property<int>("PtAtaque")
                        .HasColumnType("int")
                        .HasColumnName("Pontos_Ataque");

                    b.Property<int>("PtDefesa")
                        .HasColumnType("int")
                        .HasColumnName("Pontos_Defesa");

                    b.Property<int>("PtVida")
                        .HasColumnType("int")
                        .HasColumnName("Pontos_Vida");

                    b.HasKey("Id");

                    b.HasIndex("IdTreinador");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Restaura 20 pontos de vida",
                            IdTreinador = 1,
                            Nome = "Potion",
                            PtAtaque = 0,
                            PtDefesa = 0,
                            PtVida = 20
                        });
                });

            modelBuilder.Entity("Pokedex.Api.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Altura")
                        .HasColumnType("real")
                        .HasColumnName("Altura_Pokemon");

                    b.Property<bool>("Apanhado")
                        .HasColumnType("bit")
                        .HasColumnName("Apanhado");

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("Codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descricao");

                    b.Property<int>("Elemento")
                        .HasColumnType("int")
                        .HasColumnName("Elemento");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Imagem");

                    b.Property<int>("MaxAtaque")
                        .HasColumnType("int")
                        .HasColumnName("Max_Ataque")
                        .HasComment("Status maximo do ataque");

                    b.Property<int>("MaxDefesa")
                        .HasColumnType("int")
                        .HasColumnName("Max_Defesa")
                        .HasComment("Status maximo da defesa");

                    b.Property<int>("MaxVelocidade")
                        .HasColumnType("int")
                        .HasColumnName("Max_Velocidade")
                        .HasComment("status maximo da velocidade");

                    b.Property<int>("MaxVida")
                        .HasColumnType("int")
                        .HasColumnName("Max_Vida")
                        .HasComment("Status maximo da vida");

                    b.Property<int>("MinAtaque")
                        .HasColumnType("int")
                        .HasColumnName("Min_Ataque")
                        .HasComment("Status base do ataque");

                    b.Property<int>("MinDefesa")
                        .HasColumnType("int")
                        .HasColumnName("Min_Defesa")
                        .HasComment("Status base da defesa");

                    b.Property<int>("MinVelocidade")
                        .HasColumnType("int")
                        .HasColumnName("Min_Velocidade")
                        .HasComment("status base da velocidade");

                    b.Property<int>("MinVida")
                        .HasColumnType("int")
                        .HasColumnName("Min_Vida")
                        .HasComment("Status base da vida");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Nome_Pokemon");

                    b.Property<float>("Peso")
                        .HasColumnType("real")
                        .HasColumnName("Peso_Pokemon");

                    b.Property<int>("SegundoElemento")
                        .HasColumnType("int")
                        .HasColumnName("SegundoElemento");

                    b.HasKey("Id");

                    b.ToTable("Pokemon");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Altura = 0.7f,
                            Apanhado = false,
                            Codigo = 1,
                            Descricao = "Bulbasaur is a small, mainly turquoise amphibian Pokémon with red eyes and a green bulb on its back. It is based on a frog/toad, with the bulb resembling a plant bulb that grows into a flower as it evolves.",
                            Elemento = 4,
                            Imagem = "https://www.pokemon.com/static-assets/content-assets/cms2/img/pokedex/full/001.png",
                            MaxAtaque = 216,
                            MaxDefesa = 216,
                            MaxVelocidade = 207,
                            MaxVida = 290,
                            MinAtaque = 49,
                            MinDefesa = 49,
                            MinVelocidade = 45,
                            MinVida = 45,
                            Nome = "Bulbasaur",
                            Peso = 6.9f,
                            SegundoElemento = 7
                        },
                        new
                        {
                            Id = 2,
                            Altura = 0.6f,
                            Apanhado = false,
                            Codigo = 4,
                            Descricao = "Charmander is a bipedal, reptilian Pokémon. Most of its body is colored orange, while its underbelly is light yellow and it has blue eyes. It has a flame at the end of its tail, which is said to signify its health.",
                            Elemento = 2,
                            Imagem = "https://www.pokemon.com/static-assets/content-assets/cms2/img/pokedex/full/004.png",
                            MaxAtaque = 223,
                            MaxDefesa = 203,
                            MaxVelocidade = 251,
                            MaxVida = 282,
                            MinAtaque = 52,
                            MinDefesa = 43,
                            MinVelocidade = 65,
                            MinVida = 39,
                            Nome = "Charmander",
                            Peso = 8.5f,
                            SegundoElemento = 0
                        },
                        new
                        {
                            Id = 3,
                            Altura = 0.5f,
                            Apanhado = false,
                            Codigo = 7,
                            Descricao = "Charmander is a bipedal, reptilian Pokémon. Most of its body is colored orange, while its underbelly is light yellow and it has blue eyes. It has a flame at the end of its tail, which is said to signify its health.",
                            Elemento = 3,
                            Imagem = "https://www.pokemon.com/static-assets/content-assets/cms2/img/pokedex/full/007.png",
                            MaxAtaque = 214,
                            MaxDefesa = 251,
                            MaxVelocidade = 203,
                            MaxVida = 292,
                            MinAtaque = 48,
                            MinDefesa = 65,
                            MinVelocidade = 43,
                            MinVida = 44,
                            Nome = "Squirtle",
                            Peso = 9f,
                            SegundoElemento = 0
                        });
                });

            modelBuilder.Entity("Pokedex.Api.Models.PokemonHabilidade", b =>
                {
                    b.Property<int>("IdHabilidade")
                        .HasColumnType("int");

                    b.Property<int>("IdPokemon")
                        .HasColumnType("int");

                    b.HasKey("IdHabilidade", "IdPokemon");

                    b.HasIndex("IdPokemon");

                    b.ToTable("PokemonHabilidade");

                    b.HasData(
                        new
                        {
                            IdHabilidade = 1,
                            IdPokemon = 1
                        },
                        new
                        {
                            IdHabilidade = 2,
                            IdPokemon = 1
                        },
                        new
                        {
                            IdHabilidade = 4,
                            IdPokemon = 2
                        },
                        new
                        {
                            IdHabilidade = 5,
                            IdPokemon = 2
                        },
                        new
                        {
                            IdHabilidade = 1,
                            IdPokemon = 3
                        },
                        new
                        {
                            IdHabilidade = 8,
                            IdPokemon = 3
                        });
                });

            modelBuilder.Entity("Pokedex.Api.Models.PokemonTreinador", b =>
                {
                    b.Property<int>("IdTreinador")
                        .HasColumnType("int");

                    b.Property<int>("IdPokemon")
                        .HasColumnType("int");

                    b.HasKey("IdTreinador", "IdPokemon");

                    b.HasIndex("IdPokemon");

                    b.ToTable("PokemonTreinador");
                });

            modelBuilder.Entity("Pokedex.Api.Models.Treinador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("Data_Nascimento");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Login");

                    b.Property<string>("PNome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Primeiro_Nome");

                    b.Property<string>("SNome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Segundo_Nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Senha");

                    b.HasKey("Id");

                    b.ToTable("Treinador");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DtNascimento = new DateTime(2006, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Login = "Rafael",
                            PNome = "Rafael",
                            SNome = "Tomaz",
                            Senha = "senha"
                        },
                        new
                        {
                            Id = 2,
                            DtNascimento = new DateTime(1977, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Login = "Ye",
                            PNome = "Kayne",
                            SNome = "West",
                            Senha = "senha"
                        },
                        new
                        {
                            Id = 3,
                            DtNascimento = new DateTime(2014, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Login = "SharkBoy",
                            PNome = "Shark",
                            SNome = "Boy",
                            Senha = "senha"
                        },
                        new
                        {
                            Id = 4,
                            DtNascimento = new DateTime(2014, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Login = "LavaGirl",
                            PNome = "Lava",
                            SNome = "Girl",
                            Senha = "senha"
                        });
                });

            modelBuilder.Entity("Pokedex.Api.Models.Evolucao", b =>
                {
                    b.HasOne("Pokedex.Api.Models.Pokemon", "Pokemon")
                        .WithMany("Evolucoes")
                        .HasForeignKey("IdPokemon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("Pokedex.Api.Models.EvolucaoHabilidade", b =>
                {
                    b.HasOne("Pokedex.Api.Models.Evolucao", "Evolucao")
                        .WithMany("EvolucaoHabilidades")
                        .HasForeignKey("IdEvolucao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pokedex.Api.Models.Habilidade", "Habilidade")
                        .WithMany("EvolucaoHabilidades")
                        .HasForeignKey("IdHabilidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evolucao");

                    b.Navigation("Habilidade");
                });

            modelBuilder.Entity("Pokedex.Api.Models.Item", b =>
                {
                    b.HasOne("Pokedex.Api.Models.Treinador", "Treinador")
                        .WithMany("Itens")
                        .HasForeignKey("IdTreinador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treinador");
                });

            modelBuilder.Entity("Pokedex.Api.Models.PokemonHabilidade", b =>
                {
                    b.HasOne("Pokedex.Api.Models.Habilidade", "Habilidade")
                        .WithMany("PokemonHabilidades")
                        .HasForeignKey("IdHabilidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pokedex.Api.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonHabilidades")
                        .HasForeignKey("IdPokemon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habilidade");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("Pokedex.Api.Models.PokemonTreinador", b =>
                {
                    b.HasOne("Pokedex.Api.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonTreinadores")
                        .HasForeignKey("IdPokemon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pokedex.Api.Models.Treinador", "Treinador")
                        .WithMany("PokemonTreinadores")
                        .HasForeignKey("IdTreinador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");

                    b.Navigation("Treinador");
                });

            modelBuilder.Entity("Pokedex.Api.Models.Evolucao", b =>
                {
                    b.Navigation("EvolucaoHabilidades");
                });

            modelBuilder.Entity("Pokedex.Api.Models.Habilidade", b =>
                {
                    b.Navigation("EvolucaoHabilidades");

                    b.Navigation("PokemonHabilidades");
                });

            modelBuilder.Entity("Pokedex.Api.Models.Pokemon", b =>
                {
                    b.Navigation("Evolucoes");

                    b.Navigation("PokemonHabilidades");

                    b.Navigation("PokemonTreinadores");
                });

            modelBuilder.Entity("Pokedex.Api.Models.Treinador", b =>
                {
                    b.Navigation("Itens");

                    b.Navigation("PokemonTreinadores");
                });
#pragma warning restore 612, 618
        }
    }
}
